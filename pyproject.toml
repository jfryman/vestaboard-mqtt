[tool.black]
line-length = 100
target-version = ['py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["venv/*", ".venv/*", "build/*", "dist/*"]

[tool.mypy]
python_version = "3.11"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = false
warn_no_return = true
warn_unreachable = false
strict_equality = true
show_error_codes = true
show_column_numbers = true
pretty = true

[[tool.mypy.overrides]]
module = [
    "paho.mqtt.*",
    "pydantic.*",
    "fastapi.*",
    "uvicorn.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "src.config",
    "src.vestaboard.local_client",
    "src.vestaboard.cloud_client",
    "src.state.manager",
    "src.mqtt.handlers",
    "src.mqtt.bridge",
]
disable_error_code = [
    "arg-type",
    "override",
    "assignment",
    "import-untyped",
]

[tool.pylint.main]
max-line-length = 100
disable = [
    "C0103",  # invalid-name (snake_case)
    "C0415",  # import-outside-toplevel (needed for circular import avoidance)
    "E1101",  # no-member (false positives with pydantic)
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "R0917",  # too-many-positional-arguments
    "W0212",  # protected-access (sometimes needed for testing)
    "W0237",  # arguments-renamed (intentional for clarity)
    "W0613",  # unused-argument (common in callbacks)
    "W0718",  # broad-exception-caught (sometimes necessary)
    "W1203",  # logging-fstring-interpolation (prefer f-strings for readability)
    "W2301",  # unnecessary-ellipsis (... is correct for abstract methods)
    "R0801",  # duplicate-code (some duplication is acceptable)
    "R1705",  # no-else-return (elif can be clearer)
]

[tool.pylint.messages_control]
max-args = 7
max-attributes = 10
